##================================================================
## Project: COD-PS Assessment and Construction, Cameroon
## Script purpose: Demographic Data Quality Assessment
## Date created: 25 November, 2018
## Last updated: 25 November, 2018
##
## Author: Romesh Silva
## Maintainers: Romesh Silva, Kathrin Weny
##================================================================
print("+----------------------------+")
print("Now running demog-data-qual-assess.R")
print("+----------------------------+")


##================================================================
## Tabulate and Plot Age-Sex Distribution 
##================================================================
## Age-Sex distribution, ADM0
asd.adm0 <- 10 * table(census.data$AGE,
                       census.data$SEX)
asd5.adm0.m <- convertSingleTo5Year(asd.adm0[,1])
asd5.adm0.f <- convertSingleTo5Year(asd.adm0[,2])
asd5.adm0.t <- asd5.adm0.m + asd5.adm0.f
asd5.adm0 <- as.data.frame(cbind(asd5.adm0.m,asd5.adm0.f))
colnames(asd5.adm0) <- c("male","female")
rownames(asd5.adm0) <- seq(0,95,5)

## Age-Sex distribution, ADM1
asd.adm1 <- table(census.data$AGE,
                  census.data$SEX,
                  census.data$GEOLEV1)*10
##================================================================
## ASD Pyramid 
##================================================================
## Draw one-year age/sex pyramids at ADM0, ADM1, ADM2 
## using available survey, census data
##ADM0, 1-year age groups
Pyramid(males=asd.adm0[1:99,1],
        females=asd.adm0[1:99,2],
        year = 2005,
        verbose = FALSE,
        grid.lty=1,
        v.lty = 2,
        coh.axis = TRUE,
        border.males="black",
        border.females="black",
        xlab = "Population (1000s)",
        ylab.left = "Year",
        ylab.right = "Birth Cohort",
        main = "Enumerated Census Population, Cameroon, 2005",
        prop = FALSE,
        fill.males = "orange",
        fill.females = "yellow"
)
##ADM0, 5-year age groups
Pyramid(males=asd5.adm0.m,
        females=asd5.adm0.f,
        year = 2005,
        verbose = FALSE,
        grid.lty=1,
        v.lty = 2,
        coh.axis = TRUE,
        border.males="black",
        border.females="black",
        xlab = "Population (1000s)",
        ylab.left = "Year",
        ylab.right = "Birth Cohort",
        main = "Enumerated Census Population, Cameroon, 2005",
        prop = FALSE,
        fill.males = "orange",
        fill.females = "yellow"
)
##================================================================
## Age-ratio = 100 times the number of persons in a given age class 
##================================================================
## divided by the arithmetic average of numbers in the two adjoining age categories.
## Age-ratios should ordinarily deviate very little from 100, except at 
## advanced ages or as a result of major fluctuations in past birth rates.
aRS.adm0.m <- ageRatioScore(Value = asd.adm0[1:99,
                                             1], 
                            Age = 0:98, 
                            ageMin = 0, 
                            ageMax = max(Age), 
                            method = "UN",
                            OAG = TRUE)
aRS.adm0.f <- ageRatioScore(Value = asd.adm0[1:99,
                                             2], 
                            Age = 0:98, 
                            ageMin = 0, 
                            ageMax = max(Age), 
                            method = "UN",
                            OAG = TRUE)
## Whipple's Index (measure of digit preference for ages ending in 0 and 5)
## obtained "by summing the age returns between 23 and 62 years 
## inclusive and finding what percentage is borne by the sum of the 
## returns of years ending in 5 and 0 to one-fifth of the total sum
whipple.adm0.m <- 100 * Whipple(asd.adm0[1:99,
                                         1],
                                Age = 0:98,
                                ageMin = 23,
                                ageMax = 62,
                                digit = c(0,5)
                                )
whipple.adm0.f <- 100 *  Whipple(asd.adm0[1:99,
                                          2],
                                 Age = 0:98,
                                 ageMin = 23,
                                 ageMax = 62,
                                 digit = c(0,5)
                                 )
whipple.adm0.t <- 100 *  Whipple(rowSums(asd.adm0[1:99,]),
                                 Age = 0:98,
                                 ageMin = 23,
                                 ageMax = 62,
                                 digit = c(0,5)
                                 )
## Noumbissi
## Noumbissi's method improves on Whipple's method by 
## extending its basic principle to all ten digits. 
## It compares single terminal digit numerators to 
## denominators consisting in 5-year age groups centered 
## on the digit in question.
## Male digit-specific Whipple's Index
Noumb.male.0 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 0)
Noumb.male.1 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 1)
Noumb.male.2 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 2)
Noumb.male.3 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 3)
Noumb.male.4 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 4)
Noumb.male.5 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 5)
Noumb.male.6 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 6)
Noumb.male.7 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 7)
Noumb.male.8 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 8)
Noumb.male.9 <- Noumbissi(asd.adm0[1:99,1],0:98, ageMin=0, ageMax=65, digit = 9)
## Female digit-specific Whipple's Index
Noumb.female.0 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 0)
Noumb.female.1 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 1)
Noumb.female.2 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 2)
Noumb.female.3 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 3)
Noumb.female.4 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 4)
Noumb.female.5 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 5)
Noumb.female.6 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 6)
Noumb.female.7 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 7)
Noumb.female.8 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 8)
Noumb.female.9 <- Noumbissi(asd.adm0[1:99,2],0:98, ageMin=0, ageMax=65, digit = 9)

plot(0:9,
     c(Noumb.female.0,Noumb.female.1,Noumb.female.2,Noumb.female.3,Noumb.female.4,Noumb.female.5,Noumb.female.6,Noumb.female.7,Noumb.female.8,Noumb.female.9),
     type = "o",
     lwd=2,
     col="red",
     las=1,
     xlab="Digit",
     ylab = "Whipple Index",
     ylim = c(0.6,1.6),
     main = "Digit Specific Whipple's Index")
points(0:9,
       c(Noumb.male.0,Noumb.male.1,Noumb.male.2,Noumb.male.3,Noumb.male.4,Noumb.male.5,Noumb.male.6,Noumb.male.7,Noumb.male.8,Noumb.male.9),
       type="o",
       col="blue",
       lwd=2)
abline(h=1,
       col="darkgreen",
       lty=2,
       lwd=2)
legend("topright",
       c("Female","Male"),
       lwd=c(2,2),
       lty=c(1,1),
       col=c("red","blue"),
       bty="n",cex=.75)
## Myers' Blended Index for age heaping based on digit preference
## Myers' index reflects preferences or dislikes for each of the 
## ten digits, from 0 to 9.
##
## Large numbers mean more bias in digit preference. 
## Interpret as percent of population that would need to be moved 
## to a different age category for there to be no noticeable 
## pattern of preference in age declaration.
MyersI.adm0.m <- MyersI(asd.adm0[1:99,
                                 1],
                        0:98)
MyersI.adm0.f <- MyersI(asd.adm0[1:99,
                                 2],
                        0:98)
MyersI.adm0.t <- MyersI(rowSums(asd.adm0[1:99,]),
                        0:98)
##================================================================
## Sex Ratio: the number of males per 100 females in the same age class
##================================================================
## Sex-ratios should 'ordinarily change only very gradually from 
## one age to another, as they are determined mainly by the sex 
## ratio of births and sex differences in mortality at various ages.
sr.score.adm0 <- sexRatioScore(asd.adm0[1:99,1],
                               asd.adm0[1:99,2], 
                               1:99,
                               ageMin = 0,
                               ageMax = 98,
                               OAG = TRUE)
## Sex ratio score = average of the sum of absolute deviations of consecutive sex ratios.
sr.score.adm0
#Plot sex ratio per 5-year age groups
sex.ratio.adm0 <- 100 * asd.adm0[1:99,1]/asd.adm0[1:99,2]
sex.ratio5.adm0 <- 100 * asd5.adm0[1:20,1]/asd5.adm0[1:20,2]
plot(seq(0,95,5), sex.ratio5.adm0,
     type = "o",
     lwd = 2,
     ylab = "Sex Ratio",
     xlab = "Age Group",
     ylim = c(75,115),
     las = 1,
     main = "Sex Ratio, Cameroon, 2005")
abline(h=100, col="red",lty=2, lwd=2)
## United Nations Index
## applicable where single-year age data are not available.
## composite consisting in the sum of thrice the sex ratio 
## index plus the age ratio index for males and females.
UN.age.sex <- ageSexAccuracy(asd5.adm0.m,
                             asd5.adm0.f,
                             seq(0,90,5),
                             ageMin = 0,
                             ageMax = 94,
                             method= "UN",
                             OAG = TRUE)
UN.age.sex
#The census data is considered âaccurateâ if the index is under 20, 
#âinaccurateâ if the index is 20 to 40 and âhighly inaccurateâ if the index is over 40 (United Nations, 1952b).

##===================================================
## Zelnik method of adjusting 1-year ASD for digit preference
##===================================================
# Zelnik applies an 11-term moving average to adjust for digit preference

asd.adm.m.zelnik1 <- zelnik(asd.adm0[,1],
                            q=1, 
                            0:90)
asd.adm.f.zelnik1 <- zelnik(asd.adm0[,2],
                            q=1, 
                            0:90)
asd.adm.m.zelnik2 <- zelnik(asd.adm0[,1],
                            q=2, 
                            0:90)
asd.adm.f.zelnik2 <- zelnik(asd.adm0[,2],
                            q=2, 
                            0:90)
##Male
plot(0:90, 
     asd.adm0[1:91,1],
     type="l",
     lwd=2,
     las=1,
     ylab="",
     xlab = "Age",
     main="Cameroon Census, 2005, Males")
points(10:79,
       asd.adm.m.zelnik1[10:79],
       col="red",
       type="l",
       lwd=2)
points(15:74,
       asd.adm.m.zelnik2[15:74],
       col="orange",
       type="l",
       lwd=2)
legend("topright",
       c("Census Count","Zelnick, 11-year avg", "Zelnick 16-year avg"),
       col=c("Black","red","orange"),
       lwd=c(2,2,2),
       lty=c(1,1,1),
       bty="n",
       cex=.75)
##Female
plot(0:90, 
     asd.adm0[1:91,2],
     type="l",
     lwd=2,
     las=1,
     ylab="",
     xlab = "Age",
     main="Cameroon Census, 2005, Females")
points(10:79,
       asd.adm.f.zelnik1[10:79],
       col="red",
       type="l",
       lwd=2)
points(15:74,
       asd.adm.f.zelnik2[15:74],
       col="orange",
       type="l",
       lwd=2)
legend("topright",
       c("Census Count","Zelnick, 11-year avg", "Zelnick 16-year avg"),
       col=c("Black","red","orange"),
       lwd=c(2,2,2),
       lty=c(1,1,1),
       bty="n",
       cex=.75)
##===================================================
##interpolation of 5-year ASDs into 1-year ASDs
##===================================================
## Smoothed 1-year ASD, by applying monotonic spline to 5-yr ASD
asd.adm0.f.monospline <- splitMono(asd5.adm0.f, 
                                   OAG = TRUE)
asd.adm0.m.monospline <- splitMono(asd5.adm0.m, 
                                   OAG = TRUE)
##Beers Simple
asd.adm0.beers <- beersSimple(asd5.adm0,
                              Age = seq(0,90,5),
                              OAG = FALSE)
asd.adm0.m.beers <- asd.adm0.beers[,1]
asd.adm0.f.beers <- asd.adm0.beers[,2]
##Grabill age-splitting method
##This method uses Grabill's aggressive redistribution of middle ages 
##and blends into Sprague estimated single-age population counts for 
##the first and final ten ages. Open age groups are preserved, 
##as are annual totals.
asd.adm0.grabill <- grabill(asd5.adm0,
                            Age = seq(0,90,5),
                            OAG = FALSE)
asd.adm0.m.grabill <- asd.adm0.grabill[,1]
asd.adm0.f.grabill <- asd.adm0.grabill[,2]

##================================================================
## Graphical Coomparison of Adjustment and Inteploation methods 
##================================================================
##Male
plot(0:90, 
     asd.adm0.m.monospline,
     type="l",
     col="red",
     lwd=2,
     las=1,
     ylab="",
     xlab = "Age",
     main="Cameroon Census, 2005, Males")
points(0:90,
       asd.adm0[1:91,1],
       type="l",
       lwd=2)
points(0:90,
       asd.adm0.m.beers[1:91],
       type="l",
       col="darkgreen",
       lwd=2)
points(0:90,
       asd.adm0.m.grabill[1:91],
       type="l",
       col="orange",
       lwd=2)
points(10:79,
       asd.adm.m.zelnik1[10:79],
       col="grey",
       type="l",
       lwd=2)
legend("topright",
       c("Census Count","Monotonic Spline", "Beers","Grabill", "Zelnick"),
       col=c("Black","red","darkgreen","orange","grey"),
       lwd=c(2,2,2,2,2),
       lty=c(1,1,1,1,1),
       bty="n",
       cex=.75)
##Female
plot(0:90, 
     asd.adm0.f.monospline,
     type="l",
     col="red",
     lwd=2,
     las=1,
     ylab="",
     xlab = "Age",
     main="Cameroon Census, 2005, Females")
points(0:90,
       asd.adm0[1:91,2],
       type="l",
       lwd=2)
points(0:90,
       asd.adm0.m.beers[1:91],
       type="l",
       col="darkgreen",
       lwd=2)
points(0:90,
       asd.adm0.f.grabill[1:91],
       type="l",
       col="orange",
       lwd=2)
points(10:79,
       asd.adm.f.zelnik1[10:79],
       col="grey",
       type="l",
       lwd=2)
legend("topright",
       c("Census Count","Monotonic Spline", "Beers","Grabill", "Zelnick"),
       col=c("Black","red","darkgreen","orange","grey"),
       lwd=c(2,2,2,2,2),
       lty=c(1,1,1,1,1),
       bty="n",
       cex=.75)
